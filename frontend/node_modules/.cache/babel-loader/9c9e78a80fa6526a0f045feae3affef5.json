{"ast":null,"code":"var _jsxFileName = \"C:\\\\Movie_Management\\\\frontend\\\\src\\\\components\\\\MovieManagement\\\\UpdateMovies\\\\UpdateMovies.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { OutlinedInput } from \"@material-ui/core\";\nimport Chip from '@material-ui/core/Chip';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Input from '@material-ui/core/Input';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { KeyboardTimePicker, MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport 'date-fns';\nimport DateFnsUtils from '@date-io/date-fns';\nimport axios from 'axios';\nimport Button from \"@material-ui/core/Button\";\nimport AddAPhotoIcon from '@material-ui/icons/AddAPhoto';\nimport './UpdateMovies.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction UpdateMovies(props) {\n  _s();\n\n  const [name, setName] = useState(\"\");\n  const [director, setDirector] = useState(\"\");\n  const [genre, setGenre] = useState(\"\");\n  const [cast, setCast] = useState(\"\");\n  const [languages, setLanguages] = useState([]);\n  const [description, setDescription] = useState(\"\");\n  const [imgUrl, setImgUrl] = useState(\"\");\n  const [theaters, setTheater] = useState([]);\n  const [availableDay, setDay] = useState([]);\n  const [availableTimeFrom, setTimeFrom] = useState(new Date('2021-09-10T14:20:00'));\n  const [availableTimeTo, setTimeTo] = useState(new Date('2021-09-10T14:20:00'));\n  const [previewSource, setPreviewSource] = useState();\n  const history = useHistory();\n  const [fileInputState, setFileInputState] = useState('');\n  const [selectedFile, setSelectedFile] = useState();\n  const dates = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'];\n  const language = ['Sinhala', 'English', 'Tamil'];\n  const theater = ['Gold Class', 'Digital 2D', 'Digital 3D', 'ATMOS'];\n  useEffect(() => {\n    async function fetchMovie() {\n      await axios.get(`http://localhost:8070/movie/movies/${props.match.params.id}`).then(res => {\n        setName(res.data.name);\n        setDirector(res.data.director);\n        setGenre(res.data.genre);\n        setCast(res.data.cast);\n        setLanguages(res.data.languages);\n        setDescription(res.data.description);\n        setTheater(res.data.theaters);\n        setDay(res.data.availableDay);\n        setTimeFrom('2021-09-10T' + res.data.availableTimeFrom + ':00');\n        setTimeTo('2021-09-10T' + res.data.availableTimeTo + ':00');\n        setImgUrl(res.data.imgUrl);\n      }).catch(error => {\n        alert(\"Failed to fetch user data\");\n      });\n    }\n\n    fetchMovie();\n  }, [props]);\n\n  async function update(event) {\n    event.preventDefault();\n    let imgUrl;\n\n    if (previewSource) {\n      const formData = new FormData();\n      formData.append(\"file\", selectedFile);\n      formData.append(\"upload_preset\", \"movie_pictures\");\n\n      try {\n        await axios.post(\"https://api.cloudinary.com/v1_1/movie-reservation/image/upload\", formData).then(res => {\n          imgUrl = res.data.secure_url;\n        });\n      } catch (error) {\n        alert(error);\n      }\n    }\n\n    const updatedMovie = {\n      name,\n      director,\n      genre,\n      cast,\n      languages,\n      description,\n      theaters,\n      availableDay,\n      availableTimeTo,\n      availableTimeFrom\n    };\n    const config = {\n      headers: {\n        \"content-Type\": \"application/json\"\n      }\n    };\n\n    try {\n      await axios.put(`http://localhost:8070/movie/movies/update/${props.match.params.id}`, updatedMovie, config);\n      alert(\"Updated Successfully\");\n      history.push('/movie/movies');\n    } catch (error) {\n      alert(\"Updating failed\");\n    }\n  }\n\n  const handleFileInputChange = event => {\n    const file = event.target.files[0];\n    previewFile(file);\n    setSelectedFile(file);\n    setFileInputState(event.target.value);\n  }; //display a preview of uploaded image\n\n\n  const previewFile = file => {\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n\n    reader.onloadend = () => {\n      setPreviewSource(reader.result);\n    };\n  };\n\n  const handleLanguageChange = event => {\n    setLanguages(event.target.value);\n  };\n\n  const handleTheaterChange = event => {\n    setTheater(event.target.value);\n  };\n\n  const handleChange = event => {\n    setDay(event.target.value);\n  };\n\n  const handleTimeToChange = timeTo => {\n    setTimeTo(timeTo);\n  };\n\n  const handleTimeFromChange = timeFrom => {\n    setTimeFrom(timeFrom);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg_signup2\",\n    align: \"center\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"homeimg\",\n      src: \"../images/downloadApp1.jpg\",\n      alt: \"download from store\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-11\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pb-2 px-5 d-flex align-items-center justify-content-between\",\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"h2_signup2\",\n            align: \"center\",\n            children: \"Update Movie\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-form  form_signUp2\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: update,\n        className: \"boxSignUp2\",\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 26\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 32\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 37\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-12\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-xl-6 mb-3\",\n                children: /*#__PURE__*/_jsxDEV(OutlinedInput, {\n                  className: \"form_input2\",\n                  type: \"text\",\n                  name: \"name\",\n                  id: \"name\",\n                  value: name,\n                  placeholder: \"Movie Name\",\n                  onChange: e => setName(e.target.value),\n                  required: true,\n                  fullWidth: true,\n                  inputProps: {\n                    style: {\n                      padding: 12\n                    }\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 182,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-xl-6 mb-3\",\n                children: /*#__PURE__*/_jsxDEV(OutlinedInput, {\n                  className: \"form_input2\",\n                  type: \"text\",\n                  name: \"director\",\n                  id: \"director\",\n                  value: director,\n                  placeholder: \"Director\",\n                  onChange: e => setDirector(e.target.value),\n                  required: true,\n                  fullWidth: true,\n                  inputProps: {\n                    style: {\n                      padding: 12\n                    }\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 196,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-xl-6 mb-3\",\n                children: /*#__PURE__*/_jsxDEV(OutlinedInput, {\n                  className: \"form_input2\",\n                  type: \"text\",\n                  name: \"genre\",\n                  id: \"genre\",\n                  value: genre,\n                  placeholder: \"Genre\",\n                  onChange: e => setGenre(e.target.value),\n                  required: true,\n                  fullWidth: true,\n                  inputProps: {\n                    style: {\n                      padding: 12\n                    }\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 209,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 208,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-xl-6 mb-3\",\n                children: /*#__PURE__*/_jsxDEV(OutlinedInput, {\n                  className: \"form_input2\",\n                  type: \"text\",\n                  name: \"cast\",\n                  id: \"cast\",\n                  value: cast,\n                  placeholder: \"Cast & Crew\",\n                  onChange: e => setCast(e.target.value),\n                  required: true,\n                  fullWidth: true,\n                  inputProps: {\n                    style: {\n                      padding: 12\n                    }\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 222,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 221,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-xl-6 mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                  id: \"demo-mutiple-chip-label\",\n                  children: \"Languages\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 235,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Select, {\n                  className: \"form_input2\",\n                  id: \"demo-mutiple-chip\",\n                  multiple: true,\n                  fullWidth: true,\n                  value: languages,\n                  onChange: handleLanguageChange,\n                  input: /*#__PURE__*/_jsxDEV(Input, {\n                    id: \"select-multiple-chip\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 241,\n                    columnNumber: 52\n                  }, this),\n                  renderValue: selected => /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: selected.map(value => /*#__PURE__*/_jsxDEV(Chip, {\n                      label: value\n                    }, value, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 245,\n                      columnNumber: 57\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 243,\n                    columnNumber: 49\n                  }, this),\n                  children: language.map(language => /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: language,\n                    children: language\n                  }, language, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 251,\n                    columnNumber: 45\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 236,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 234,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 258,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-xl-6 mb-3\",\n                children: /*#__PURE__*/_jsxDEV(OutlinedInput, {\n                  className: \"form_input2\",\n                  type: \"text\",\n                  name: \"description\",\n                  id: \"description\",\n                  value: description,\n                  placeholder: \"Description\",\n                  onChange: e => setDescription(e.target.value),\n                  required: true,\n                  fullWidth: true,\n                  inputProps: {\n                    style: {\n                      padding: 12\n                    }\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 261,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 260,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-xl-6 mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                  id: \"demo-mutiple-chip-label\",\n                  children: \"Theaters\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 275,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Select, {\n                  className: \"form_input2\",\n                  id: \"demo-mutiple-chip\",\n                  multiple: true,\n                  fullWidth: true,\n                  value: theaters,\n                  onChange: handleTheaterChange,\n                  input: /*#__PURE__*/_jsxDEV(Input, {\n                    id: \"select-multiple-chip\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 281,\n                    columnNumber: 52\n                  }, this),\n                  renderValue: selected => /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: selected.map(value => /*#__PURE__*/_jsxDEV(Chip, {\n                      label: value\n                    }, value, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 285,\n                      columnNumber: 57\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 283,\n                    columnNumber: 49\n                  }, this),\n                  children: theater.map(theater => /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: theater,\n                    children: theater\n                  }, theater, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 291,\n                    columnNumber: 45\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 276,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 274,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 299,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 302,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-xl-12 mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                  id: \"demo-mutiple-chip-label\",\n                  children: \"Available Day\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 305,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Select, {\n                  className: \"form_input2\",\n                  id: \"demo-mutiple-chip\",\n                  multiple: true,\n                  fullWidth: true,\n                  value: availableDay,\n                  onChange: handleChange,\n                  input: /*#__PURE__*/_jsxDEV(Input, {\n                    id: \"select-multiple-chip\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 311,\n                    columnNumber: 52\n                  }, this),\n                  renderValue: selected => /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: selected.map(value => /*#__PURE__*/_jsxDEV(Chip, {\n                      label: value\n                    }, value, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 315,\n                      columnNumber: 57\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 313,\n                    columnNumber: 49\n                  }, this),\n                  children: dates.map(date => /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: date,\n                    children: date\n                  }, date, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 321,\n                    columnNumber: 45\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 306,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 304,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 328,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(MuiPickersUtilsProvider, {\n                utils: DateFnsUtils,\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col-xl-6 mb-3\",\n                  children: /*#__PURE__*/_jsxDEV(KeyboardTimePicker, {\n                    className: \"form_input2\",\n                    margin: \"normal\",\n                    id: \"time-picker\",\n                    label: \"Time From\",\n                    value: availableTimeFrom,\n                    onChange: handleTimeFromChange,\n                    KeyboardButtonProps: {\n                      'aria-label': 'change time'\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 332,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 331,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col-xl-6 mb-3\",\n                  children: /*#__PURE__*/_jsxDEV(KeyboardTimePicker, {\n                    className: \"form_input2\",\n                    margin: \"normal\",\n                    id: \"time-picker\",\n                    label: \"Time To\",\n                    value: availableTimeTo,\n                    onChange: handleTimeToChange,\n                    KeyboardButtonProps: {\n                      'aria-label': 'change time'\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 344,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 343,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 330,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 356,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 358,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-4\",\n                children: [previewSource ? /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: previewSource,\n                  alt: \"preview\",\n                  className: \"previewImg2\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 363,\n                  columnNumber: 41\n                }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: `${imgUrl}`,\n                  className: \"previewImg2\",\n                  alt: \"movie image\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 365,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form-group2\",\n                  children: /*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: \"moviepic\",\n                    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                      style: {\n                        display: 'none'\n                      },\n                      id: \"moviepic\",\n                      name: \"moviepic\",\n                      type: \"file\",\n                      onChange: handleFileInputChange,\n                      value: fileInputState\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 370,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(Button, {\n                      color: \"primary\",\n                      variant: \"contained\",\n                      component: \"span\",\n                      className: \"button_3\",\n                      children: [/*#__PURE__*/_jsxDEV(AddAPhotoIcon, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 381,\n                        columnNumber: 49\n                      }, this), \" \\xA0 Upload Banner\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 379,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 369,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 368,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 360,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-xl-12\",\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"submit\",\n                  className: \"form-submit-btn btn_sign_up2\",\n                  value: \"Update Details\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 388,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 387,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 158,\n    columnNumber: 9\n  }, this);\n}\n\n_s(UpdateMovies, \"8Xig+0mxdPqL3sH4i1mHZAh5NOA=\", false, function () {\n  return [useHistory];\n});\n\n_c = UpdateMovies;\nexport default UpdateMovies;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateMovies\");","map":{"version":3,"sources":["C:/Movie_Management/frontend/src/components/MovieManagement/UpdateMovies/UpdateMovies.js"],"names":["React","useState","useEffect","useHistory","OutlinedInput","Chip","InputLabel","Input","Select","MenuItem","KeyboardTimePicker","MuiPickersUtilsProvider","DateFnsUtils","axios","Button","AddAPhotoIcon","UpdateMovies","props","name","setName","director","setDirector","genre","setGenre","cast","setCast","languages","setLanguages","description","setDescription","imgUrl","setImgUrl","theaters","setTheater","availableDay","setDay","availableTimeFrom","setTimeFrom","Date","availableTimeTo","setTimeTo","previewSource","setPreviewSource","history","fileInputState","setFileInputState","selectedFile","setSelectedFile","dates","language","theater","fetchMovie","get","match","params","id","then","res","data","catch","error","alert","update","event","preventDefault","formData","FormData","append","post","secure_url","updatedMovie","config","headers","put","push","handleFileInputChange","file","target","files","previewFile","value","reader","FileReader","readAsDataURL","onloadend","result","handleLanguageChange","handleTheaterChange","handleChange","handleTimeToChange","timeTo","handleTimeFromChange","timeFrom","e","style","padding","selected","map","date","display"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport {useHistory} from 'react-router-dom';\nimport {OutlinedInput} from \"@material-ui/core\";\nimport Chip from '@material-ui/core/Chip';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Input from '@material-ui/core/Input';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport {KeyboardTimePicker, MuiPickersUtilsProvider} from '@material-ui/pickers';\nimport 'date-fns';\nimport DateFnsUtils from '@date-io/date-fns';\nimport axios from 'axios';\nimport Button from \"@material-ui/core/Button\";\nimport AddAPhotoIcon from '@material-ui/icons/AddAPhoto';\nimport './UpdateMovies.css';\n\nfunction UpdateMovies(props) {\n\n    const [name, setName] = useState(\"\");\n    const [director, setDirector] = useState(\"\");\n    const [genre, setGenre] = useState(\"\");\n    const [cast, setCast] = useState(\"\");\n    const [languages, setLanguages] = useState([]);\n    const [description, setDescription] = useState(\"\");\n    const [imgUrl, setImgUrl] = useState(\"\");\n    const [theaters, setTheater] = useState([]);\n    const [availableDay, setDay] = useState([]);\n    const [availableTimeFrom, setTimeFrom] = useState(new Date('2021-09-10T14:20:00'));\n    const [availableTimeTo, setTimeTo] = useState(new Date('2021-09-10T14:20:00'));\n    const [previewSource, setPreviewSource] = useState();\n    const history = useHistory();\n    const [fileInputState, setFileInputState] = useState('');\n    const [selectedFile, setSelectedFile] = useState();\n\n    const dates = [\n        'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'\n    ]\n\n    const language = [\n        'Sinhala', 'English', 'Tamil'\n    ]\n\n    const theater = [\n        'Gold Class', 'Digital 2D', 'Digital 3D', 'ATMOS'\n    ]\n\n\n    useEffect(() => {\n        async function fetchMovie() {\n            await axios.get(`http://localhost:8070/movie/movies/${props.match.params.id}`).then((res) => {\n                setName(res.data.name)\n                setDirector(res.data.director)\n                setGenre(res.data.genre)\n                setCast(res.data.cast)\n                setLanguages(res.data.languages)\n                setDescription(res.data.description)\n                setTheater(res.data.theaters)\n                setDay(res.data.availableDay)\n                setTimeFrom('2021-09-10T' + res.data.availableTimeFrom + ':00')\n                setTimeTo('2021-09-10T' + res.data.availableTimeTo + ':00')\n                setImgUrl(res.data.imgUrl)\n            }).catch((error) => {\n                alert(\"Failed to fetch user data\")\n            })\n        }\n\n        fetchMovie()\n    }, [props]);\n\n    async function update(event) {\n\n        event.preventDefault();\n\n        let imgUrl\n\n        if (previewSource) {\n            const formData = new FormData();\n            formData.append(\"file\", selectedFile)\n            formData.append(\"upload_preset\", \"movie_pictures\")\n\n            try {\n                await axios.post(\"https://api.cloudinary.com/v1_1/movie-reservation/image/upload\", formData).then((res) => {\n                    imgUrl = res.data.secure_url\n                })\n            } catch (error) {\n                alert(error)\n            }\n        }\n\n\n        const updatedMovie = {\n            name,\n            director,\n            genre,\n            cast,\n            languages,\n            description,\n            theaters,\n            availableDay,\n            availableTimeTo,\n            availableTimeFrom\n        }\n\n        const config = {\n            headers: {\n                \"content-Type\": \"application/json\",\n            }\n        };\n\n        try {\n            await axios.put(`http://localhost:8070/movie/movies/update/${props.match.params.id}`, updatedMovie, config);\n            alert(\"Updated Successfully\")\n            history.push('/movie/movies')\n        } catch (error) {\n            alert(\"Updating failed\")\n        }\n    }\n\n\n    const handleFileInputChange = (event) => {\n        const file = event.target.files[0];\n        previewFile(file);\n        setSelectedFile(file);\n        setFileInputState(event.target.value);\n    };\n\n\n    //display a preview of uploaded image\n    const previewFile = (file) => {\n        const reader = new FileReader();\n        reader.readAsDataURL(file)\n        reader.onloadend = () => {\n            setPreviewSource(reader.result)\n        }\n    }\n\n    const handleLanguageChange = (event) => {\n        setLanguages(event.target.value);\n    };\n\n    const handleTheaterChange = (event) => {\n        setTheater(event.target.value);\n    };\n\n    const handleChange = (event) => {\n        setDay(event.target.value);\n    };\n\n    const handleTimeToChange = (timeTo) => {\n        setTimeTo(timeTo);\n    };\n\n    const handleTimeFromChange = (timeFrom) => {\n        setTimeFrom(timeFrom);\n    };\n\n    return (\n        <div className=\"bg_signup2\" align=\"center\">\n\n            <img\n                className=\"homeimg\"\n                src=\"../images/downloadApp1.jpg\"\n                alt=\"download from store\"\n            />\n            <br/><br/>\n            <div className=\"row\">\n                <div className=\"col-11\">\n                    <div className=\"pb-2 px-5 d-flex align-items-center justify-content-between\">\n                        <h2 className='h2_signup2' align=\"center\">Update Movie</h2>\n                    </div>\n                </div>\n            </div>\n            <div className=\"card-form  form_signUp2\">\n                <form onSubmit={update} className=\"boxSignUp2\">\n                    <br/><br/> <br/><br/>\n                    <div className=\"row\">\n\n                        <div className=\"col-12\">\n                            <div className=\"row\">\n\n                                <div className=\"col-xl-6 mb-3\">\n                                    <OutlinedInput className='form_input2'\n                                                   type=\"text\"\n                                                   name=\"name\"\n                                                   id=\"name\"\n                                                   value={name}\n                                                   placeholder=\"Movie Name\"\n                                                   onChange={(e) => setName(e.target.value)}\n                                                   required fullWidth\n                                                   inputProps={{style: {padding: 12}}}\n                                    />\n                                </div>\n                                <br/>\n\n                                <div className=\"col-xl-6 mb-3\">\n                                    <OutlinedInput className='form_input2'\n                                                   type=\"text\"\n                                                   name=\"director\"\n                                                   id=\"director\"\n                                                   value={director}\n                                                   placeholder=\"Director\"\n                                                   onChange={(e) => setDirector(e.target.value)}\n                                                   required fullWidth\n                                                   inputProps={{style: {padding: 12}}}\n                                    />\n                                </div>\n\n                                <div className=\"col-xl-6 mb-3\">\n                                    <OutlinedInput className='form_input2'\n                                                   type=\"text\"\n                                                   name=\"genre\"\n                                                   id=\"genre\"\n                                                   value={genre}\n                                                   placeholder=\"Genre\"\n                                                   onChange={(e) => setGenre(e.target.value)}\n                                                   required fullWidth\n                                                   inputProps={{style: {padding: 12}}}\n                                    />\n                                </div>\n\n                                <div className=\"col-xl-6 mb-3\">\n                                    <OutlinedInput className='form_input2'\n                                                   type=\"text\"\n                                                   name=\"cast\"\n                                                   id=\"cast\"\n                                                   value={cast}\n                                                   placeholder=\"Cast & Crew\"\n                                                   onChange={(e) => setCast(e.target.value)}\n                                                   required fullWidth\n                                                   inputProps={{style: {padding: 12}}}\n                                    />\n                                </div>\n\n                                <div className=\"col-xl-6 mb-3\">\n                                    <InputLabel id=\"demo-mutiple-chip-label\">Languages</InputLabel>\n                                    <Select className='form_input2'\n                                            id=\"demo-mutiple-chip\"\n                                            multiple fullWidth\n                                            value={languages}\n                                            onChange={handleLanguageChange}\n                                            input={<Input id=\"select-multiple-chip\"/>}\n                                            renderValue={(selected) => (\n                                                <div>\n                                                    {selected.map((value) => (\n                                                        <Chip key={value} label={value}/>\n                                                    ))}\n                                                </div>\n                                            )}\n                                    >\n                                        {language.map((language) => (\n                                            <MenuItem key={language} value={language}>\n                                                {language}\n                                            </MenuItem>\n                                        ))}\n                                    </Select>\n                                </div>\n\n                                <br/>\n\n                                <div className=\"col-xl-6 mb-3\">\n                                    <OutlinedInput className='form_input2'\n                                                   type=\"text\"\n                                                   name=\"description\"\n                                                   id=\"description\"\n                                                   value={description}\n                                                   placeholder=\"Description\"\n                                                   onChange={(e) => setDescription(e.target.value)}\n                                                   required fullWidth\n                                                   inputProps={{style: {padding: 12}}}\n                                    />\n                                </div>\n\n\n                                <div className=\"col-xl-6 mb-3\">\n                                    <InputLabel id=\"demo-mutiple-chip-label\">Theaters</InputLabel>\n                                    <Select className='form_input2'\n                                            id=\"demo-mutiple-chip\"\n                                            multiple fullWidth\n                                            value={theaters}\n                                            onChange={handleTheaterChange}\n                                            input={<Input id=\"select-multiple-chip\"/>}\n                                            renderValue={(selected) => (\n                                                <div>\n                                                    {selected.map((value) => (\n                                                        <Chip key={value} label={value}/>\n                                                    ))}\n                                                </div>\n                                            )}\n                                    >\n                                        {theater.map((theater) => (\n                                            <MenuItem key={theater} value={theater}>\n                                                {theater}\n                                            </MenuItem>\n                                        ))}\n                                    </Select>\n                                </div>\n\n\n                                <br/>\n\n\n                                <br/>\n\n                                <div className=\"col-xl-12 mb-3\">\n                                    <InputLabel id=\"demo-mutiple-chip-label\">Available Day</InputLabel>\n                                    <Select className='form_input2'\n                                            id=\"demo-mutiple-chip\"\n                                            multiple fullWidth\n                                            value={availableDay}\n                                            onChange={handleChange}\n                                            input={<Input id=\"select-multiple-chip\"/>}\n                                            renderValue={(selected) => (\n                                                <div>\n                                                    {selected.map((value) => (\n                                                        <Chip key={value} label={value}/>\n                                                    ))}\n                                                </div>\n                                            )}\n                                    >\n                                        {dates.map((date) => (\n                                            <MenuItem key={date} value={date}>\n                                                {date}\n                                            </MenuItem>\n                                        ))}\n                                    </Select>\n                                </div>\n\n                                <br/>\n\n                                <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                                    <div className=\"col-xl-6 mb-3\">\n                                        <KeyboardTimePicker className='form_input2'\n                                                            margin=\"normal\"\n                                                            id=\"time-picker\"\n                                                            label=\"Time From\"\n                                                            value={availableTimeFrom}\n                                                            onChange={handleTimeFromChange}\n                                                            KeyboardButtonProps={{\n                                                                'aria-label': 'change time',\n                                                            }}\n                                        />\n                                    </div>\n                                    <div className=\"col-xl-6 mb-3\">\n                                        <KeyboardTimePicker className='form_input2'\n                                                            margin=\"normal\"\n                                                            id=\"time-picker\"\n                                                            label=\"Time To\"\n                                                            value={availableTimeTo}\n                                                            onChange={handleTimeToChange}\n                                                            KeyboardButtonProps={{\n                                                                'aria-label': 'change time',\n                                                            }}\n                                        />\n                                    </div>\n                                </MuiPickersUtilsProvider>\n                                <br/>\n\n                                <br/>\n\n                                <div className=\"col-4\">\n\n                                    {previewSource ?\n                                        <img src={previewSource} alt=\"preview\" className=\"previewImg2\"/>\n                                        :\n                                        <img src={`${imgUrl}`} className=\"previewImg2\" alt=\"movie image\"/>\n                                    }\n\n                                    <div className=\"form-group2\">\n                                        <label htmlFor=\"moviepic\">\n                                            <input\n                                                style={{display: 'none'}}\n                                                id=\"moviepic\"\n                                                name=\"moviepic\"\n                                                type=\"file\"\n                                                onChange={handleFileInputChange}\n                                                value={fileInputState}\n                                            />\n\n                                            <Button color=\"primary\" variant=\"contained\" component=\"span\"\n                                                    className=\"button_3\">\n                                                <AddAPhotoIcon/> &nbsp; Upload Banner\n                                            </Button>\n                                        </label>\n                                    </div>\n\n                                </div>\n                                <div className=\"col-xl-12\">\n                                    <input type=\"submit\" className=\"form-submit-btn btn_sign_up2\"\n                                           value=\"Update Details\"/>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </form>\n            </div>\n        </div>\n\n\n    )\n\n}\n\n\nexport default UpdateMovies"]},"metadata":{},"sourceType":"module"}