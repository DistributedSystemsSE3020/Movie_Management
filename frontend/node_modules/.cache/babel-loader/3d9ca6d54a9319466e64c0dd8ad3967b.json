{"ast":null,"code":"var _jsxFileName = \"D:\\\\University\\\\SLIIT\\\\Lectures\\\\3rdYear\\\\1stSemester\\\\DS\\\\GroupProject\\\\Test\\\\Test\\\\frontend\\\\src\\\\components\\\\ReservationManagement\\\\SeatBooking\\\\BookMySeats.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport classes from './BookMySeats.css';\nimport Seats from './Seats';\nimport './print.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst createSeats = (rows, startIndex) => {\n  let i = 0;\n  let j = startIndex;\n  let k = 'A';\n  const section = [];\n\n  while (i < 6 && j <= rows) {\n    if (k > 'F') {\n      k = 'A';\n      j++;\n    }\n\n    if (j < rows + 1) {\n      section.push(j + k);\n      k = String.fromCharCode(k.charCodeAt(0) + 1);\n    }\n  }\n\n  return section;\n};\n\nconst BookMySeats = () => {\n  _s();\n\n  const premiumSeats = createSeats(2, '1');\n  const normalSeats = createSeats(6, '3');\n  const [availableSeats, setAvailableSeats] = useState(['1A', '2B', '2F', '2E', '3B', '3F', '3E', '4B', '4F', '4E', '5B']);\n  const [bookedSeats, setBookedSeats] = useState([]);\n  const [bookedStatus, setBookedStatus] = useState('');\n\n  const addSeat = ev => {\n    if (numberOfSeats && !ev.target.className.includes('disabled')) {\n      const seatsToBook = parseInt(numberOfSeats, 10);\n\n      if (bookedSeats.length <= seatsToBook) {\n        if (bookedSeats.includes(ev.target.innerText)) {\n          const newAvailable = bookedSeats.filter(seat => seat !== ev.target.innerText);\n          setBookedSeats(newAvailable);\n        } else if (bookedSeats.length < numberOfSeats) {\n          setBookedSeats([...bookedSeats, ev.target.innerText]);\n        } else if (bookedSeats.length === seatsToBook) {\n          bookedSeats.shift();\n          setBookedSeats([...bookedSeats, ev.target.innerText]);\n        }\n      }\n    }\n  };\n\n  const confirmBooking = () => {\n    setBookedStatus('You have successfully booked the following seats:');\n    bookedSeats.forEach(seat => {\n      setBookedStatus(prevState => {\n        return prevState + seat + ' ';\n      });\n    });\n    const newAvailableSeats = availableSeats.filter(seat => !bookedSeats.includes(seat));\n    setAvailableSeats(newAvailableSeats);\n    setBookedSeats([]);\n    setNumberOfSeats(0);\n  };\n\n  const [numberOfSeats, setNumberOfSeats] = useState(0);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"seat_booking_div\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"How many seats would you like to book?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"input\",\n        value: numberOfSeats,\n        onChange: ev => setNumberOfSeats(ev.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: 300,\n          height: 600\n        },\n        children: [/*#__PURE__*/_jsxDEV(Seats, {\n          values: premiumSeats,\n          availableSeats: availableSeats,\n          bookedSeats: bookedSeats,\n          addSeat: addSeat\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Seats, {\n          values: normalSeats,\n          availableSeats: availableSeats,\n          bookedSeats: bookedSeats,\n          addSeat: addSeat\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: confirmBooking,\n          children: \"Book seats\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 20\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: bookedStatus\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 1\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n};\n\n_s(BookMySeats, \"P7yBOTwh9ZNU/uu/T6Go1/L18tA=\");\n\n_c = BookMySeats;\nexport default BookMySeats;\n\nvar _c;\n\n$RefreshReg$(_c, \"BookMySeats\");","map":{"version":3,"sources":["D:/University/SLIIT/Lectures/3rdYear/1stSemester/DS/GroupProject/Test/Test/frontend/src/components/ReservationManagement/SeatBooking/BookMySeats.js"],"names":["React","useState","classes","Seats","createSeats","rows","startIndex","i","j","k","section","push","String","fromCharCode","charCodeAt","BookMySeats","premiumSeats","normalSeats","availableSeats","setAvailableSeats","bookedSeats","setBookedSeats","bookedStatus","setBookedStatus","addSeat","ev","numberOfSeats","target","className","includes","seatsToBook","parseInt","length","innerText","newAvailable","filter","seat","shift","confirmBooking","forEach","prevState","newAvailableSeats","setNumberOfSeats","value","width","height"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\nimport classes from './BookMySeats.css';\r\nimport Seats from './Seats';\r\nimport './print.css'\r\n\r\nconst createSeats = (rows, startIndex) => {\r\n    let i = 0;\r\n    let j = startIndex;\r\n    let k = 'A';\r\n    const section = [];\r\n    while(i < 6 && j <= rows) {\r\n        if(k > 'F') {\r\n            k = 'A';\r\n            j++;\r\n        }\r\n        if(j < rows + 1) {\r\n            section.push(j + k);\r\n            k = String.fromCharCode(k.charCodeAt(0) + 1);\r\n        }\r\n    }\r\n    return section;\r\n\r\n}\r\n\r\n\r\nconst BookMySeats = () => {\r\n  const premiumSeats = createSeats(2, '1');\r\n  const normalSeats = createSeats(6, '3');\r\n  const [availableSeats, setAvailableSeats] = useState(['1A','2B','2F','2E','3B','3F','3E','4B','4F','4E','5B']);\r\n  const [bookedSeats, setBookedSeats] = useState([]);\r\n  const [bookedStatus, setBookedStatus] = useState('');\r\n  const addSeat = (ev) => {\r\n      if(numberOfSeats && !ev.target.className.includes('disabled')) {\r\n          const seatsToBook = parseInt(numberOfSeats, 10);\r\n        if(bookedSeats.length <= seatsToBook) {\r\n            if (bookedSeats.includes(ev.target.innerText)) {\r\n                const newAvailable = bookedSeats.filter(seat => seat !== ev.target.innerText);\r\n                setBookedSeats(newAvailable);\r\n            } else if(bookedSeats.length < numberOfSeats) {\r\n                setBookedSeats([...bookedSeats, ev.target.innerText]);\r\n\r\n            } else if (bookedSeats.length === seatsToBook) {\r\n                bookedSeats.shift();\r\n                setBookedSeats([...bookedSeats, ev.target.innerText]);\r\n            }\r\n        }\r\n      }\r\n    };\r\n\r\n  const confirmBooking = () => {\r\n      setBookedStatus('You have successfully booked the following seats:');\r\n      bookedSeats.forEach(seat => {\r\n           setBookedStatus(prevState => {\r\n               return prevState + seat + ' ';\r\n           })\r\n      });\r\n      const newAvailableSeats = availableSeats.filter(seat => !bookedSeats.includes(seat));\r\n      setAvailableSeats(newAvailableSeats);\r\n      setBookedSeats([]);\r\n      setNumberOfSeats(0);\r\n  };\r\n  const [numberOfSeats, setNumberOfSeats] = useState(0);\r\n\r\n  return (\r\n        <React.Fragment>\r\n<div className=\"seat_booking_div\">\r\n            <p>How many seats would you like to book?</p>\r\n            <input className='input' value={numberOfSeats} onChange={(ev) => setNumberOfSeats(ev.target.value)}/>\r\n            <div style={{width:300, height:600}}>\r\n            <Seats values={premiumSeats}\r\n                   availableSeats={availableSeats}\r\n                   bookedSeats={bookedSeats}\r\n                   addSeat={addSeat}/>\r\n            <Seats values={normalSeats}\r\n                   availableSeats={availableSeats}\r\n                   bookedSeats={bookedSeats}\r\n                   addSeat={addSeat}/>\r\n\r\n\r\n\r\n                   <button onClick={confirmBooking}>Book seats</button>\r\n            <p>{bookedStatus}</p>\r\n            </div>\r\n</div>\r\n        </React.Fragment>\r\n\r\n\r\n    );\r\n}\r\n\r\nexport default BookMySeats;\r\n"]},"metadata":{},"sourceType":"module"}